"""
–í—ã–≥—Ä—É–∑–∫–∞ –±—ç–∫–∞–ø Notion –≤ –Ø–Ω–¥–µ–∫—Å–î–∏—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–π –Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ–π –º–∞—à–∏–Ω–µ.

1. –Ø–Ω–¥–µ–∫—Å–î–∏—Å–∫:
https://disk.yandex.ru/client/disk/notion_backups

2. –ß—Ç–æ –±—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å backup_service.main –≤ –∫–æ–¥–µ –ø—Ä–∏—à–ª–æ—Å—å –≤ –±–∏–±–ª–∏–æ—Ç–µ–∫–µ notion_backup/backup_service.py
–∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å 3 —Å—Ç—Ä–æ—á–∫–∏.
"""

import os
import sys

from loguru import logger as log
import yadisk
from dotenv import load_dotenv
from timeit import default_timer as timer
from datetime import timedelta

from telegram_sender import send_massage_to_admin_telegram
from notion_backup import backup_service
load_dotenv()

YANDEX_TOKEN = os.getenv("YANDEX_TOKEN")
PATH_BACKUPS_IN_YA_DISK = "notion_backups/"

# 1. –°–æ–∑–¥–∞–µ–º –±—ç–∫–∞–ø –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –Ø–Ω–¥–µ–∫—Å–î–∏—Å–∫ 'Yandex.Disk/notion_backups/'
# - –ú–µ–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –ø—É—Ç—å os –¥–ª—è —Ç–æ–≥–æ —á—Ç–æ –±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ —É–∫–∞–∑–∞—Ç—å –≤–µ—Ä–Ω—ã–π –ø—É—Ç—å –¥–ª—è –∫–æ–º–∞–Ω–¥—ã backup_notion
os.chdir("/home/vlad")
# os.chdir("/Users/vladmironov2")

start_time = timer()
try:
    message_start = (f"Notion-backups:\n\n"
                     f"üé¨ –ù–∞—á–∏–Ω–∞—é –∑–∞–≥—Ä—É–∑–∫—É –±—ç–∫–∞–ø–∞.\n\n")
    log.debug(message_start)
    send_massage_to_admin_telegram(message_start)
    backup_service.main(output_dir="Yandex.Disk/notion_backups", space_id="e6edf439-211a-49fb-ac9d-8a91d00f7279")
except Exception as e:
    message_exception = (f"Notion-backups:\n\n"
                         f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–≥—Ä—É–∑–∏—Ç—å –±—ç–∫–∞–ø.\n\n"
                         f"{str(e)}")
    log.debug(message_exception)
    send_massage_to_admin_telegram(message_exception)
    sys.exit()

end_time = timer()
time_for_backup = str(timedelta(seconds=end_time - start_time))

# - –í—Ä–µ–º—è –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –ø–æ–ª—É—á–∏–ª–∏ –±—ç–∫–∞–ø
time_for_backup = time_for_backup[:7]

# 2. –£–¥–∞–ª–µ–Ω–∏–µ –ª–∏—à–Ω–µ–≥–æ –±—ç–∫–∞–ø —Å –Ø–Ω–¥–µ–∫—Å–î–∏—Å–∫, –µ—Å–ª–∏ –∏—Ö –±–æ–ª—å—à–µ 30

# - –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –Ø–Ω–¥–µ–∫—Å–î–∏—Å–∫
y = yadisk.YaDisk(token=YANDEX_TOKEN)

# - –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω –Ø–Ω–¥–µ–∫—Å–î–∏—Å–∫–∞
CONNECT_YANDEX = y.check_token()

if CONNECT_YANDEX:
    log.debug("–£—Å–ø–µ—à–Ω–æ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å –Ø–Ω–¥–µ–∫—Å–î–∏—Å–∫")
else:
    message_connect_success = ("Notion-backups:\n\n"
                               "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è —Å –Ø–Ω–¥–µ–∫—Å–î–∏—Å–∫")
    log.debug(message_connect_success)
    send_massage_to_admin_telegram(message_connect_success)

backups_on_disk = list(y.listdir("notion_backups"))

try:
    # - –û–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å–∫–æ–ª—å–∫–æ –±—ç–∫–∞–ø–æ–≤ –Ω–∞ –Ø–Ω–¥–µ–∫—Å–î–∏—Å–∫
    qty_backups = len(backups_on_disk)
    message_remove = ''
    # - –ï—Å–ª–∏ –±–æ–ª—å—à–µ 30 –±—ç–∫–∞–ø–æ–≤ –Ω–∞ –Ø–Ω–¥–µ–∫—Å–î–∏—Å–∫ —Ç–æ —É–¥–∞–ª–∏—Ç—å —Å–∞–º—ã–π —Å—Ç–∞—Ä—ã–π
    if qty_backups > 30:
        list_files = []
        for backup in backups_on_disk:
            list_files.append({"name": backup.name, "created": backup.created})

        sorted_by_created_list = sorted(list_files, key=lambda d: d['created'])
        old_file_name = sorted_by_created_list[0]["name"]

        # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª
        y.remove(f"{PATH_BACKUPS_IN_YA_DISK}{old_file_name}", permanently=True)
        message_remove = f"–£–¥–∞–ª–µ–Ω —Å—Ç–∞—Ä—ã–π –±—ç–∫–∞–ø {old_file_name}"
        log.debug(message_remove)

    message_success = (f"Notion-backups:\n"
                       f"‚úÖ –£—Å–ø–µ—à–Ω—ã–π –±—ç–∫–∞–ø.\n"
                       f"–ë—ç–∫–∞–ø —Å–æ–∑–¥–∞–Ω –∑–∞ {time_for_backup}\n"
                       f"–ö–æ–ª-–≤–æ –±—ç–∫–∞–ø–æ–≤: {qty_backups}"
                       f"{message_remove}")
    log.debug(message_success)
    send_massage_to_admin_telegram(message_success)

except Exception as e:
    message_exception = (f"Notion-backups:\n\n"
                         f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–≥—Ä—É–∑–∏—Ç—å –±—ç–∫–∞–ø.\n\n"
                         f"{str(e)}")
    log.debug(message_exception)
    send_massage_to_admin_telegram(message_exception)
